1.网络应用程序常见的几种架构(了解)
	(1)主机/终端
		特点
			主机负责所有的计算，终端只负责输入
		和输出。
		优点
			可靠，安全
		缺点
			昂贵，扩展困难
	(2)client/server
		1)两层的cs
			特点
				使用数据库充当服务器，数据库负责处理
			大量的业务逻辑和数据的存贮。客户端负责
			界面和少量的业务逻辑处理。
			缺点
				可移值性差(因为不同的数据库，编程语言不
				一样)。
				不适合开发大型的应用(因为客户端要和数据库
				建立持续的网络连接)
		2)三层的cs
			特点
				所有的业务逻辑集中写在应用服务器里面，
			客户端只负责界面。
			优点
				可移植性好(数据库要换，不用重写业务，只
				需要导入导出数据即可)
				适合开发大型的应用。
			缺点
				客户端需要单独安装和维护
				开发相对复杂(需要自定义协议)
	browser/web server
		特点
			使用浏览器来充当客户端，使用web服务器来
		充当应用服务器，浏览器与web服务器之间使用
		标准的http协议来通信。
		优点
				客户端不再需要单独安装
				开发相对简对
2.什么是servlet?
	sun公司制订的一种用来扩展web服务器功能的
组件规范。
	(1)扩展web服务器功能
		早期的web服务器只能够处理静态资源的请求
	(即需要事先将html文件写好，放到服务器上面),
	不能够处理动态资源的请求(即需要计算，生成动
	态页面)。
		早期使用cgi程序来扩展web服务器，即
	web服务器通过调用cgi程序来计算，生成动态页面。
		现在，可以使用servlet来代替cgi程序。
	(2)组件规范
		1)组件是什么?
			符合一定规范，实现部分功能的，并且可以
		部署的软件模块。
			servlet就是一个组件。
		2)容器是什么?
			符合一定规范，并且提供组件的运行环境的程序。
			servlet需要部署到servlet容器里面才能运行。
3.如何写一个servlet?
	step1,写一个java类，实现Servlet接口或者
	继承HttpServlet抽象类。
	step2,编译
	step3,打包
		却创建一个具有如下结构的文件夹
			appname
				WEB-INF
					classes(放.class文件)
					lib(可选，放.jar文件)
					web.xml(部署描述文件)
	step4,部署
			即将step3创建好的文件夹拷贝到servlet容器
		里面。
	step5,启动servlet容器，访问servlet
			http://ip:port/appname/servlet-url

4.安装tomcat
	tomcat是一个servlet容器，同时，也是一个简单的
	web服务器。
	step1,解压
		(去www.apache.org下载tomcat的安装文件)
		将/opt/apache-tomcat7.tar.gz 解压到
		/home/soft01
	step2,配置环境变量
		JAVA_HOME: /opt/java6
		CATALINA_HOME: /home/soft01/apache-tomcat7
		PATH: /home/soft01/apache-tomcat7/bin
	step3,启动tomcat
		cd /home/soft01/apache-tomcat7/bin
		sh  startup.sh (或者 sh catalina.sh run)
	step4, 打开浏览器，输入
		http://localhost:8080
		
		
			
		
		
		
	
				
			
			
		
	
	
		
		
		
		
			
		
