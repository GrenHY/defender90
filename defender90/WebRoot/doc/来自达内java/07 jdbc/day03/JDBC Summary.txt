十、JDBC总结：
    1、什么是JDBC？三句话
	Java官方制定的访问所有数据库的规范
	一系列的接口
	各个数据库厂商提供接口的实现
    2、JDBC的核心API：
	Connection：封装连接
	    方法：createStatement():无参数，返回值Statement
		意义：创建一个空的Statement对象
		  preparedStatement(String sql)：参数是一条sql语句，可能带问号
			返回值：PreparedStatement对象
		意义：创建一个PreparedStatement对象，实际上是将一个带参数的SQL送到数据库服务器进行预编译
		  conn.close()://关闭连接释放资源
		  conn.setAutoCommit(false)://取消自动提交
		  conn.commit();conn.rollback()；提交和回滚
		  
	Statement：封装SQL语句，及其执行
	    1)、executeQuery(sql)
	    2)、executeUpdate(sql);
	    PreparedStatement：
	    方法：setXXX(第几个问号,参数值)，设置sql语句参数，将参数发给数据库服务器中预编译好的sql。
		  setObject(第几个问号，参数值)，自动判断参数类型，功能同上
		  ResultSet executeQuery();
		  int r executeUpdate();
	ResultSet：封装DQL语句执行的结果
	    方法：next()：游标下移一行，返回true，说明没有到末尾，返回false，说明已到末尾
		  getXXX(第几列或列名)：获得当前游标行指定列的值
			其中XXX表示数据类型，表示把数据转换为XXX类型再返回
    3、几个解决方案：（特定问题如何处理）
	1)、通用DQL如何编写
	    步骤：Step1：创建连接
		  Step2：获取pstmt，预编译SQL
		  Step3：设置参数
		  Step4：执行查询
		  Step5：遍历结果集
		  Step6：关闭连接！
	2)、通用DML如何编写
	    步骤：Step1：创建连接
		  Step2：获取pstmt，预编译SQL
		  Step3：设置参数
		  Step4：执行DML，可以获得受影响的行数
		  Step5：关闭连接
	3)、事务控制
	    步骤：Step1：创建连接
		  Step2：设置自动提交为false
		  Step3：try{
			     执行DML语句1
			     执行DML语句2
			     。。。
			     提交事务！
			 }catch(Exception ex){
			     回滚事务！
			 }finally{
			     关闭连接
			 }
	4)、使用连接池
	    会答问题：用过没有：用过！
		      为什么用：节省连接频繁创建和回收的开销
		      基本含义是：维护一定数量的已经打开的链接，如果有需要，就提供该连接。用完需归还给连接池。连接池会根据访问量，调整连接池中的连接数。（可配置）
		      使用过：Apache Commons DBCP
		      如何配置：BasicDataSource ds=new BasicDataSource();
				ds.setXXX：设置连接参数
				ds.getConnection()：获得链接
		      用完：conn.close()：归还连接，未关闭
	    回答项目经理问题时：精确，具体，连贯，简明！
	5)、使用批处理
	    步骤：Step1：创建连接
		  Step2：创建pstmt（必须！不能是stmt,因为要先缓存sql，再批量传参）
		  Step3：for(...){
			    设置pstmt参数setXXX
			    添加到批处理pstmt.addBatch();
			 }
		  Step4：执行批处理pstmt.executeBatch();
		  Step5：关闭连接

		注意：一般批处理，都作为一个完整的事务，所以必须加入事务处理
		      批处理数量过大，要分成多批，分批执行
    4、会写DAO：
	1)、定义连接工具类，获取链接：一定要用连接池；连接参数写在属性文件中。
		（重用！今天写好,以后不用再写了！将来公司里肯定都有现成的）
	2)、定义实体类：和数据表对应
	3)、定义BaseDAO类：（重用！今天写好,以后不用再写了！将来在公司里肯定都有，你只要继承即可。用之前，只看方法定义和参数！不看实现！）
	4)、编写实体对应的DAO extends BaseDAO<实体类>：