<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	
	<!-- 配置数据源 -->
	<bean id="ds" 
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="url" 
			value="jdbc:oracle:thin:@192.168.175.252:1521:orcl"/>
		<property name="driverClassName" 
			value="oracle.jdbc.OracleDriver"/>
		<property name="username" value="zhangdong"/>
		<property name="password" value="sa"/>
	</bean>
	
	<!-- 配置SqlSessionFactory -->
	<!-- 该工厂类由Spring提供，里面封装了
		创建session、关闭session、开启事务、
		提交事务的方法。使用Spring整合MyBatis
		之后，我们可以不必自己做这些事，Spring
		会自动的做这些处理。这里也是整合思想
		的体现。 -->
	<bean id="sqlSessionFactory" 
		class="org.mybatis.spring.SqlSessionFactoryBean">  
      <property name="dataSource" ref="ds" />
      <!-- 创建容器时，Spring会根据此项配置
      	自动加载MyBatis的映射文件。 -->
      <property name="mapperLocations" 
      	value="classpath:com/tarena/entity/*.xml"/>
    </bean>
    
    <!-- 配置MyBatis注解 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <!-- 创建容器后，MapperScannerConfigurer会
       		自动扫描当前指定路径下的接口/类 -->
       <property name="basePackage" 
       		value="com.tarena.dao" />
       <!-- MapperScannerConfigurer自动扫描带有
       		如下注解的接口/类 -->
       <property name="annotationClass" 
           value="com.tarena.annotation.MyBatisRepository"/>
	</bean>
	
	<!-- 开启IOC注解扫描 -->
	<context:component-scan 
		base-package="com.tarena" />
	
	<!-- 开启MVC注解扫描 -->
	<mvc:annotation-driven />
	
	<!-- 处理请求转发 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 页面前缀 -->
		<property name="prefix" value="/WEB-INF/"/>
		<!-- 页面后缀 -->
		<property name="suffix" value=".jsp"/>
	</bean>

</beans>