回顾:
小学3年级----一个问题不会做
小学6年级----看那个道


正常听了-----
  语法
  经典案例-----完全不懂了


似懂非懂
  语法会
  题做不出-----非常非常...正常的

语法必须会
学习解题的思路
1.
2.
3.
4.
...
多练、多想
清晰

1.嵌套循环--循环中套循环
    外层---100
      内层---200
    一共需20000次
    外层循环走一次，内层循环走所有次
    break:只能跳出一层循环

九九乘法表

2.数组是不是数据类型-----是
  数组--------语法规定
    int[] arr = new int[4];
    int[] arr = {1,2,3,4};
    int[] arr = new int[]{1,2,3,4};

    int[] arr;
    arr = {1,2,3}; //错误
    arr = new int[]{1,2,3};
    arr[1] = 100;
    for(int i=0;i<arr.length;i++){
       arr[i] = 200;
    }
    for(int i=0;i<arr.length;i++){
       System.out.println(arr[i]);
    }

    System.arraycopy()
    Arrays.copyOf()
    Arrays.sort()-------
    冒泡

冒泡算法-------
  原理写法



质数:素数，只能被1和它本身整除的数
3  
5
  5%2/3/4----!=0


8
  8%2/3/4/5/6/7----判断是否为0
    只要有一个为0-----说明不是质数
    所有都不为0-------说明是质数


  if(8%2)
  8%3
  8%4





9
  9%2/3/4/5/6/7/8
    -----不是质数
11
  11%2/3/4/5/6/7/8/9/10


int num = 8;

正课:


100是不是质数

100%2/3/4/.../98/99
100%2/3/4/.../50


平方根
9平方根3
16平方根4
24平方根4.???
25平方根5
  25%2/3/4/5
100平方根10
  100%2/3/4/5/6/7/8/9/10




main(){
   500+1000+1000+200==2700
   调查余额()
   调取钱()
   调存钱()
   调改密()
   1+1+1+1------------4
}

查余额(){  //特定的功能
  500行
}
取钱(){
  1000行
}
存钱(){
  1000行
}
改密码(){
  200行
}




main(){
  int[] a;-----排序
  1句话调冒泡

  int[] b;
  1句话调冒泡
}
冒泡(){
   6句话
}







方法:封装一段特定的逻辑功能
     尽可能的独立
优点:结构清晰、实现代码的重用

---------方法的返回值
System.out.println("HelloWorld");
System.arraycopy(a,1,a1,0,4);
Arrays.sort(arr);

int num = scan.nextInt();
double num = Math.random();
int[] arr = Arrays.copyOf(arr,arr.length+1);


----------方法的参数
int num = scan.nextInt();
double num = Math.random(); [0,1)

System.out.println("HelloWorld");
System.out.println("今天天气不错");
System.out.println("心情也不错");

有参:方法更灵活







System.arraycopy(?,?,?,?,?);
Arrays.sort(arr);
int[] arr = Arrays.copyOf(arr,arr.length+1);




练习:
1.无返回值无参
2.无返回值有参
3.有返回值无参
4.有返回值有参
5.main()方法中调用如上4个方法

public static void say(){ }
public static void sayHi(String name){ }
public static int plus(){return 5;}
public static int sum(int n1,int n2){
    int n = n1+n2;
    return n;
}
public static void main(String[] args){
   say();
   sayHi("wkj");
   int num = plus();    //num值为5
   System.out.println("num="+num);
   int num2 = sum(5,6); //num2值为11
   System.out.println("num2="+num2);
}


ABCDE----藏起来的

ACMIJ----猜的
提示--------猜对了2个，位置对了1个

100*5-50=450

设计:
1.数据结构
2.算法


设计:
1.数据结构----变量
2.程序结构----方法
3.算法--------解决问题的流程/步骤




猜字母游戏:
一.设计数据结构
1.int score;----------分数
2.char[] chs;---------随机生成的字母
3.char[] input;-------用户猜的字母
4.int[] result;-------猜测的结果
5.int count;----------猜错的次数

二.设计程序结构
1.主方法:
    public static void main(String[] args){
    }
2.随机生成5个字符方法:
    public static char[] generate(){
       char[] chs = new char[5];
       return chs;
    }
3.对比:随机生成的字符数组和用户输入的字符数组
    public static int[] check(char[] chs,char[] input){
       int[] result = new int[2];
       return result;
    }
三.算法
1.3个方法的具体实现

下周四之前----独立的完成猜字母游戏



5个字符不能重复


chs:    ABCDE
input:  ARTCM



int[] result = new int[2];
for(int i=0;i<chs.length;i++){
   for(int j=0;j<input.length;j++){
      if(chs[i] == input[j]){  //字符对
         result[0]++;
	 if(i == j){  //位置对
            result[1]++;
	 }
	 break;
      }
   }
}
return result;









Math.random()----[0,1)


char[] letters = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};
boolean[] flags = new boolean[26];
for(int i=0;i<chs.length;i++){
   int index;
   do{
      index = (int)(Math.random()*26);
   }while(flags[index]==true);

   chs[i] = letters[index];
   flags[index] = true;
}
index=0
  flags[0]=true
index=1
index=0
index=25
  flags[25]=true chs[2]='Z' flags[25]=true

index=0  
  flags[0]=false chs[0]='A' flags[0]=true
index=1
  flags[1]=false chs[1]='B' flags[1]=true
A
B
C
D
E
"ABCDE"

scan.nextInt();--------int
scan.nextDouble();-----double
String str = scan.next();-----------String
char[] input = str.toCharArray();

main(){
   int count=0;  //计数器
   1.得到随机生成数组--chs
   while(true){
     2.猜吧!接收用户输入的数组--input
     3.chs和input比----result
     4.if(result[1]==5){
	 int score = 500-count*10;
	 猜对了，得分score , break
       }else{
         字符对result[0]个，位置对result[1]个
         count++; //错一次
       }
   }
}


while(true){  //永远为真---死循环
   适当的时候break----避免死循环
}


ABCDE---藏起来的
猜吧:
exit---比较之后
       猜对了几个字符，位置对了几个?


String str = "    AB CD         "
str = str.trim(); //去掉两边的空格
str="AB CD"











int index = (int)(Math.random()*26);//0到25
chs[0] = letters[index];

index = (int)(Math.random()*26);
chs[1] = letters[index];

















参数-----程序更灵活
















public static int plus(int num1,int num2){
   int num = num1+num2;
   return  num;
}
public static void main(String[] args){
   int a=5,b=6;
   int n = plus(a,b);





   plus(a,b);//int num1=5,int num2=6









   plus(5,6);//int num1=5,int num2=6
}













100%51/52/53----1.???

商1有余数
商不到2







